1、渐变
	属性：background-image
	取值：
		线性渐变：linear-gradient(angle,color-point);
		径向渐变：radial-gradient([size at position],color-point);
		重复线性渐变：repeating-linear-gradient()
		重复径向渐变：repeating-radial-gradient()
	兼容性：
		浏览器前缀：
			Firefox : -moz-
			Chrome & Safari : -webkit-
			Opera : -o-
			IE : -ms-
		浏览器不支持属性，前缀加在属性前
		浏览器不支持值，前缀加在属性值前
2、文本格式化
	1、字体
		font-family,font-size,font-weight,font-style,font-variant,font
	2、文本
		color,text-decoration,text-align,line-height,text-indent,text-shadow
3、表格
	1、常用属性
		margin 不能用在 td 中
		vertical-align : top / middle / bottom
	2、特有属性
		1、border-collapse : separate / collapse
		2、border-spacing : 值 ;
		3、caption-side : top / bottom;
		4、table-layout : auto / fixed;
=========================================
1、定位 - 浮动
	1、什么是定位
		定位，就是改变元素在页面中的默认位置
	2、定位的分类
		1、普通流定位 - 页面默认定位方式
		2、浮动定位 - 多个块级元素在一行内显示 
		3、相对定位
		4、绝对定位
		5、固定定位
	3、定位-普通流定位
		普通流定位，又称为 "文档流定位", 是页面中默认的定位方式
		特点：
			1、所有的元素都是从父元素的左上角开始出现
			2、每个元素都有空间，默认不能重叠
			3、块级元素 - 从上到下显示
			4、行内 & 行内块 - 从左到右，显示不下换行
	4、浮动定位（重点）
		1、什么是浮动
			如果将元素的定位方式设置为浮动定位，将具备以下特征：
			1、浮动，会将元素排除在文档流之外(脱离文档流),不占据页面空间，其它元素要上前占位
			2、浮动元素会停靠在父元素的左边或右边,或其它平级的已浮动元素的边缘上
			3、浮动元素只能在当前行浮动
			4、浮动元素依然在父元素中
			5、浮动定位处理的问题-让多个块级元素在一行内显示
		2、语法
			属性：float
			取值：
				1、none
					默认值，即元素无任何浮动效果
				2、left
					左浮动，让元素停靠在父元素的左边，或者挨着左侧已有浮动元素的右边上
				3、right
					右浮动，让元素停靠在父元素的右边，或者挨着右侧已有浮动元素的左边上
		3、浮动引发的特殊效果
			1、父元素中，如果显示不下所有的已浮动子元素，最后一个会换行，有可能会被卡住
			2、元素一旦浮动起来之后，元素宽度将由内容来决定(非指定情况下)
			3、元素一旦浮动起来之后，那么都将变成块级元素，尤其对行内元素影响较大
				块级元素：允许修改尺寸
				行内元素：不能修改尺寸
			4、文本，行内元素，行内块元素 是采用环绕的方式来排列的，不会被浮动元素压在低下，而会巧妙的避开浮动元素
		4、清除浮动所带来的影响
			元素一旦浮动起来，会对后面的元素带来位置的影响，如果后面的元素不想被影响的话，可以通过 "清除" 的方式 来解除影响
			属性：clear
			取值：
				1、none
					默认值，即不做任何清除浮动
				2、left
					清除 前面 元素左浮动所带来的影响，即前面元素左浮动的话，当前元素不会上前占位
				3、right
					清除 前面 元素右浮动所带来的影响，即前面元素右浮动的话，当前元素不会上前占位
				4、both
					清除 前面 元素任何一种浮动所带来的影响
		5、浮动元素对父元素的影响
			由于浮动元素会脱离文档流，所以会导致元素不占据空间.如果一个元素中所有的子元素全部都是浮动的，那么该元素的高度就是 0 ，父元素的高度，是以未浮动元素的高度为准
			解决方案：
				1、直接设置父元素的高度
					弊端：必须要知道父元素的高度
				2、设置父元素也浮动
					弊端：对后续元素时有位置影响的
				3、为父元素设置 overflow 取值为 hidden 或 auto
					弊端：如果有要溢出显示的内容，也一同被隐藏
				4、在父元素的最后一个子元素位置处，增加 一个空块级元素，并且设置其 clear:both
				5、... ...
2、显示
	1、显示方式
		作用：指定了元素在页面中默认的布局方式
		属性：display
		取值：
			1、none
				让生成的元素不显示并且脱离文档流
			2、block
				让元素变的与块级元素一样
			3、inline
				让元素变的与行内元素一样
			4、inline-block
				让元素变的与行内块元素一样
				特点：
					1、多个行内块以及行内元素能在一行内显示
					2、行内块元素允许修改尺寸(除radio,checkbox)
			5、table
				让元素变的与 表格 一样
				特点：
					1、独占一行
					2、宽度以内容为准
			6、table-cell
				让元素变的与 单元格 一样
	2、显示效果
		1、可见性
			属性：visibility
			取值：
				1、visible
					默认值，元素可见
				2、hidden
					隐藏，没脱离文档流

					display:none 与 visibility:hidden的区别
					display:none 会脱离文档流，所以不占空间
				3、collapse
					用在表格元素上，删除一行或一列时，表格整体布局不受影响
		2、透明度
			属性：opacity
			取值：0.0(完全透明) ~ 1.0(完全不透明)

			rgba(r,g,b,alpha);
			div{
				background-color:rgba(255,0,0,0.5);
				opacity:0.5;
			}
		3、垂直对齐
		属性：vertical-align
		作用：
			1、作用在表格(table,tr,td,th,...)元素上
				指定表格中的内容的垂直对齐方式 
				取值：top / middle / bottom
			2、作用在 图像 以及 行内块元素上时
				指定 图像 或 行内块 元素 两端的文本的垂直对齐方式
				取值：
					1、top
					2、middle
					3、bottom
					4、baseline
						基线对齐
						对于行内块元素：基线在最后一行文本的底部
						对于图片元素：基线是在图片底部向下3px位置处(默认情况)
						vertical-align:bottom;解决图像多占3px高的问题
	3、光标
	属性：cursor
	取值：
		1、default
			默认值
		2、pointer
			小手
		3、crosshair
			+
		4、text
			I
		5、wait
			等待
		6、help
			帮助 
3、列表
	1、列表项标识
		属性：list-style-type
		取值：
			1、none
			... ...
	2、列表项图像
		属性：list-style-image
		取值：url(图像的url)
	3、列表项位置
		属性：list-style-position
		取值：
			1、outside
				默认值，标识位于列表项之外
			2、inside
				将标识位置改为列表项之内
	4、列表属性
		属性：list-style
		取值：type url() position;

		常用形式：list-style:none;
4、定位
	1、定位属性
		1、定位属性
			属性：position
			作用：指定元素的定位方式
			取值：
				1、static
					默认值
				2、relative
					相对定位
				3、absolute
					绝对定位
				4、fixed
					固定定位
			注意：如果元素设置为 相对定位/绝对定位/固定定位的话，则会被称之为 "已定位元素"
		2、偏移属性
			作用：对已定位属性实现位置的移动
			属性：
				top:以上边为基准边改变元素位置
				right:以右边为基准边改变元素位置
				bottom:以下边为基准边改变元素位置
				left:以左边为基准边改变元素位置
		3、堆叠顺序
			属性：z-index
			取值：无单位的数字
	2、定位-相对定位
		1、什么是相对定位
			元素会相对于它原来的位置偏移某个距离
		2、语法
			属性：position
			取值：relative
			配合偏移属性 完成位置的移动
		3、注意
			相对定位元素 原来的位置 会被保留，不能被其它元素所占据（相对定位 与 margin的区别）
	3、定位-绝对定位
		1、什么是绝对定位
			1、绝对定位元素会脱离文档流-不占据页面空间
			2、绝对定位的元素会相对于 离他最近的 已定位的 祖先元素 去实现位置初始化
			3、配合 偏移属性 实现位置的改变
			4、如果 绝对定位元素 没有 已定位的祖先元素，那么它的位置就相对于最初的包含框(body 或 html)实现初始化
		2、语法
			属性：position
			取值：absolute
			配合 偏移属性 实现元素的移动
		3、特点
			1、会脱离文档流
			2、绝对定位元素会变成块级元素
			3、绝对定位元素在正常情况下，margin:auto会失效，其它正常
			4、非正常情况，auto会生效
				绝对定位元素的 top,right,bottom,left 同时为0时，auto会生效

